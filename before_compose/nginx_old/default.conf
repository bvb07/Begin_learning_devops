upstream web2 {
  server web2:3443;
}
upstream web3 {
  server web3:3445;
}


# http -> https
server {
  listen 80;
  server_name web.cx.internal;
  rewrite ^(.*) https://$host$1 permanent;
}


server {
  listen 443 ssl;
  server_name api.cx.internal;
  proxy_read_timeout 700s;
  proxy_connect_timeout 700s;
  proxy_send_timeout 700s;

  # Add Headers for api.cx.internal proxy mode
  proxy_set_header X-Forwarded-Host $host;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto $scheme;
  proxy_set_header X-Real-IP $remote_addr;

  # SSL parameters
  ssl_certificate /etc/ssl/nginx/myhostname.crt;
  ssl_certificate_key /etc/ssl/nginx/myhostname.key;
  ssl_session_timeout 60m;
  #ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  #ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
  #ssl_prefer_server_ciphers off;



  # log
  access_log /var/log/nginx/api.access.log;
  error_log /var/log/nginx/api.error.log;

 

  # Redirect requests to api backend server
  location / {
    proxy_redirect off;
    proxy_pass http://web2;
  }

  # common gzip
  gzip_types text/css text/scss text/plain text/xml application/xml application/json application/javascript;
  gzip on;
}